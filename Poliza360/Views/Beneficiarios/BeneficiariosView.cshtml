<!DOCTYPE html>
<html lang="es" dir="ltr">
<head>
    <!--    Stylesheets    -->
    <link rel="stylesheet" href="https://cdn.grapecity.com/wijmo/5.20242.30/styles/wijmo.min.css">
    <style>
        .wj-inputnumber {
            width: 10em;
        }

        .params > div {
            margin-bottom: 0.5em;
        }
    </style>

</head>

<body>
    <!--    Main Content    -->
    <div class="row">
        <!-- Contenido    -->
        <main class="col-md-12 px-md-4 main-content">
            <h3 class="border-bottom mb-5">Beneficiarios</h3>

            <div class="container-fluid">
                <div class="form-group">
                    <label for="theInputDateRange">InputDateRange: </label>
                        <input id="theInputDateRange">
                </div>

            </div>
        </main>
    </div>

    <!--    JavaScripts    -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.culture.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.input.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.grid.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.grid.filter.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.grid.cellmaker.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.21.5/system.src.js" integrity="sha512-skZbMyvYdNoZfLmiGn5ii6KmklM82rYX2uWctBhzaXPxJgiv4XBwJnFGr5k8s+6tE1pcR1nuTKghozJHyzMcoA==" crossorigin="anonymous"></script>

    <script>
        const inputDateRange = new wijmo.input.InputDateRange('#theInputDateRange', {
            alwaysShowCalendar: true,
            predefinedRanges: getPredefinedRanges(),
            value: new Date(),
            rangeEnd: wijmo.DateTime.addDays(new Date(), 2),
            closeOnSelection: true,
            handleWheel: false,
            monthCount: 2,
            weeksBefore: 0,
            weeksAfter: 0,
        });
        //
        // init monthCount input
        let monthCount = new InputNumber('#monthCount', {
            min: 1,
            step: 1,
            value: inputDateRange.monthCount,
            valueChanged: (sender) => {
                inputDateRange.monthCount = sender.value;
            }
        });
        //
        // init weeksBefore input
        let weeksBefore = new InputNumber('#weeksBefore', {
            min: 0,
            step: 1,
            value: inputDateRange.weeksBefore,
            valueChanged: (sender) => {
                inputDateRange.weeksBefore = sender.value;
            }
        });
        //
        // init weeksAfter input
        let weeksAfter = new InputNumber('#weeksAfter', {
            min: 0,
            step: 1,
            value: inputDateRange.weeksAfter,
            valueChanged: (sender) => {
                inputDateRange.weeksAfter = sender.value;
            }
        });
        //
        // get predefined date ranges
        function getPredefinedRanges() {
            let dt = wijmo.DateTime, now = new Date();
            return {
                // custom
                'Custom Range': null,
                // days
                //'Today': [now, now],
                //'Yesterday': [dt.addDays(now, -1), dt.addDays(now, -1)],
                //'Tomorrow': [dt.addDays(now, +1), dt.addDays(now, +1)],
                // weeks
                'This Week': [dt.weekFirst(now), dt.weekLast(now)],
                'Last Week': [dt.weekFirst(dt.addDays(now, -7)), dt.weekLast(dt.addDays(now, -7))],
                'Next Week': [dt.weekFirst(dt.addDays(now, +7)), dt.weekLast(dt.addDays(now, +7))],
                // months
                'This Month': [dt.monthFirst(now), dt.monthLast(now)],
                'Last Month': [dt.monthFirst(dt.addMonths(now, -1)), dt.monthLast(dt.addMonths(now, -1))],
                'Next Month': [dt.monthFirst(dt.addMonths(now, +1)), dt.monthLast(dt.addMonths(now, +1))],
                // years
                'This Year': [dt.yearFirst(now), dt.yearLast(now)],
                'Last Year': [dt.addYears(dt.yearFirst(now), -1), dt.addYears(dt.yearLast(now), -1)],
                'Next Year': [dt.addYears(dt.yearFirst(now), +1), dt.addYears(dt.yearLast(now), +1)],
            };
        }
    </script>

</body>
</html>